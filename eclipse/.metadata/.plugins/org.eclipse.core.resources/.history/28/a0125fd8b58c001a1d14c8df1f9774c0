package qc.slow.quariummod.items.itemss;

import java.util.Set;

import com.google.common.collect.ImmutableSet;
import com.google.common.collect.Sets;

import net.minecraft.block.Block;
import net.minecraft.init.Blocks;
import net.minecraft.item.ItemPickaxe;
import net.minecraft.item.ItemStack;

public class Q_MT extends ItemPickaxe {

	public Q_MT(ToolMaterial p_i45347_1_) {
		super(p_i45347_1_);
		// TODO Auto-generated constructor stub
	}
private static Set<Block> effectiveAgainst=Sets.newHashSet(new Block[] {
			Blocks.stone,Blocks.cobblestone,Blocks.dirt,Blocks.crafting_table,Blocks.planks,
			Blocks.acacia_stairs,Blocks.activator_rail,Blocks.bed,Blocks.birch_stairs,
			Blocks.bookshelf, Blocks.cactus,Blocks.wool,Blocks.web,Blocks.sticky_piston,
			Blocks.chest,Blocks.clay,Blocks.crafting_table,Blocks.sponge,Blocks.soul_sand,
			Blocks.dark_oak_stairs,Blocks.fence,Blocks.fence_gate,Blocks.spruce_stairs,
			Blocks.sand,Blocks.grass,Blocks.oak_stairs,Blocks.leaves,Blocks.leaves2,
			Blocks.gravel,Blocks.jungle_stairs,Blocks.hay_block,Blocks.log,Blocks.log2,
});

@Override
public Set<String> getToolClasses(ItemStack s){
return ImmutableSet.of("pickaxe","spade","axe","hoe");
}
@Override
public boolean canHarvestBlock(Block b,ItemStack s) {
	return effectiveAgainst.contains(b)?true:super.canHarvestBlock(b, s);
	
}
@Override
public float func_150893_a(ItemStack s,Block b) {
	
	return effectiveAgainst.contains(b)?this.efficiencyOnProperMaterial: super.func_150893_a(s, b);
	
}

}
