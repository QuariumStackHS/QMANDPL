package qc.slow.quariummod.world;

import java.util.Random;

import cpw.mods.fml.common.IWorldGenerator;
import net.minecraft.block.Block;
import net.minecraft.init.Blocks;
import net.minecraft.world.World;
import net.minecraft.world.chunk.IChunkProvider;
import net.minecraft.world.gen.feature.WorldGenMinable;
import qc.slow.quariummod.blocks.blocks;

public class WorldGen implements IWorldGenerator {

@Override
public void generate(Random random, int chunkX, int chunkZ, World world, IChunkProvider chunkGenerator,
		IChunkProvider chunkProvider) {
	
	switch(world.provider.dimensionId) {
	case -1:
		generatenether(world,chunkX*16,chunkZ*16,random);
	case 0:
		generateover(world,chunkX*64,chunkZ*64,random);
	case 1:
		generateend(world,chunkX*16,chunkZ*16,random);
	}
	
}
private void AddOre(Block b,Block bs,Random r, World w, int X, int Z,int minY,int maxY,int MinF,int MaxF,int MaxSC) {
	
	for(int i=0;i<MaxSC;i++) {
		int CS=64;
		int x=X+r.nextInt(CS);
		int y=minY+r.nextInt(maxY-minY);
		int z=Z+r.nextInt(CS);
		new WorldGenMinable(b,MaxF).generate(w, r, x, y, z);
	}
	
}
private void generateend(World world, int i, int j, Random random) {
	
}

private void generateover(World world, int i, int j, Random random) {

	AddOre(blocks.Samarium_ore,Blocks.stone,random,world,i,j,6,12,1,2,2);
}

private void generatenether(World world, int i, int j, Random random) {
	
}
}
